{"version":3,"sources":["assets/images/burger-logo.png","axios-orders.js","components/Burger/IngredientStyling.js","components/Burger/Burger.js","components/BuildControls/BuildControl.js","components/BuildControls/BuildControlsPanel.js","components/UI/Backdrop.js","components/UI/Modal.js","components/UI/Button.js","components/Order/OrderSummary.js","hoc/withErrorHandler.js","components/UI/Spinner.js","store/actions/order.js","store/actions/actionTypes.js","store/actions/auth.js","containers/BurgerBuilder.js","store/actions/burger.js","components/Logo/Logo.js","components/Navigation/NavigationItem.js","components/Navigation/NavigationItems.js","components/UI/HamburgerButton.js","components/Navigation/Toolbar.js","components/Navigation/SideDrawer.js","components/Checkout/CheckoutSummary.js","containers/Checkout.js","components/Order/Order.js","containers/Orders.js","components/UI/Input.js","shared/utilities.js","containers/ContactDetails.js","Auth/Auth.js","Auth/Logout.js","App.js","serviceWorker.js","store/reducers/burger.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","IngredientsStyles","breadTop","breadBottom","meat","salad","bacon","cheese","styled","div","props","type","BurgerContainer","burger","ingredientsComponents","Object","keys","ingredients","map","igKey","Array","_","i","key","BuildControlDiv","Button","button","disabled","Label","label","buildControl","onClick","removeIngredient","addIngredient","BuildControlsDiv","OrderButton","controls","buildControls","price","toFixed","ctrl","BuildControl","disabledInfo","orderButtonClick","isAuthenticated","BackdropDiv","backdrop","show","ModalDiv","Modal","nextProps","nextState","this","children","Fragment","Backdrop","hideModal","Component","themes","success","danger","StyledButton","OrderSummary","ingredientsList","push","style","textTransform","orderSummary","length","continuePurchase","withErrorHandler","WrappedComponent","errorDismissHandler","setState","error","state","interceptors","request","use","req","response","res","color","message","SpinnerDiv","spinner","purchaseBurger","order","token","dispatch","post","then","orderId","id","purchaseBurgerSuccess","data","name","catch","purchaseBurgerFail","authSuccess","userId","logout","localStorage","removeItem","logoutWhenExpire","expirationTime","setTimeout","BurgerBuilder","purchasing","loading","orderButtonHandler","setAuthRedirectUrl","history","hidePurchaseModalHandler","continuePurchaseHandler","replace","componentDidMount","initIngredients","Spinner","Burger","BuildControlsPanel","addIngredientHandler","removeIngredientHandler","totalPrice","connect","auth","ingType","actions","get","authRedirectUrl","LogoDiv","height","LogoImg","img","logo","src","BurgerLogoImg","alt","Li","li","LinkDiv","active","navigationItem","textDecoration","backgroundColor","to","href","NavigationItemsUl","ul","navigationItems","NavigationItem","HamburgerBarDiv","hamburgerButton","ToolbarHeader","header","DesktopOnlyDiv","MobileOnlyDiv","toolbar","Logo","NavigationItems","HamburgerButton","showSideDrawer","SideDrawerDiv","sideDrawer","hideSideDrawer","CheckoutSummaryDiv","CheckoutSummary","checkoutCancelHandler","checkoutContinueHandler","Checkout","summary","OrderDiv","Orders","fetchOrders","orders","Order","queryParams","fetchOrdersSuccess","fetchOrdersFail","InputDiv","GeneralInputElementStyle","Input","input","invalid","Textarea","textarea","Select","select","inputElement","elementType","elementConfig","value","onChange","event","changed","options","option","displayValue","updateObject","object","newProps","checkInputValidity","rules","clearedValue","required","maxLength","minLength","checkFormValidity","form","valid","Form","ContactDetails","orderForm","placeholder","validation","touched","street","zipCode","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","inputChangedHandler","updatedOrderForm","target","postOrderHandler","preventDefault","formData","cancelOrderHandler","formElementsArray","config","onSubmit","El","FormDiv","Auth","password","isSignup","updatedAuthForm","loginSubmitHandler","switchAuthModeHandler","prevState","inputName","formEl","errorMessage","formPanel","marginTop","authData","returnSecureToken","url","idToken","localId","expirationDate","Date","getTime","expiresIn","setItem","authFail","console","log","Logout","StyledMain","main","App","showSideDrawerHandler","hideSideDrawerHandler","tryAutoLogin","routes","path","component","from","exact","Toolbar","SideDrawer","getItem","currentDate","Boolean","window","location","hostname","match","INGREDIENT_PRICES","bread","initialPrice","sum","countObjectValues","initialState","reducer","action","concat","rootReducer","combineReducers","composeEnhancers","compose","centralStore","createStore","applyMiddleware","thunk","app","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1e5cda8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burgerpub-b74df.firebaseio.com/'\n});\n\nexport default instance;","import styled from 'styled-components';\n\nconst IngredientsStyles = {\n    breadTop: `\n        height: 20%;\n        width: 80%;\n        background: linear-gradient(#bc581e, #e27b36);\n        border-radius: 50% 50% 0 0;\n        box-shadow: inset -15px 0 #c15711;\n        margin: 2% auto;\n        position: relative;\n    `,\n    breadBottom: `\n        height: 13%;\n        width: 80%;\n        background: linear-gradient(#F08E4A, #e27b36);\n        border-radius: 0 0 30px 30px;\n        box-shadow: inset -15px 0 #c15711;\n        margin: 2% auto;\n    `,\n\n    meat: `\n        width: 80%;\n        height: 8%;\n        background: linear-gradient(#7f3608, #702e05);\n        margin: 2% auto;\n        border-radius: 15px;\n    `,\n\n    salad: `\n        width: 85%;\n        height: 7%;\n        margin: 2% auto;\n        background: linear-gradient(#228c1d, #91ce50);\n        border-radius: 20px;\n    `,\n\n    bacon: `\n        width: 80%;\n        height: 3%;\n        background: linear-gradient(#bf3813, #c45e38);\n        margin: 2% auto;\n    `,\n\n    cheese: `\n        width: 90%;\n        height: 4.5%;\n        margin: 2% auto;\n        background: linear-gradient(#f4d004, #d6bb22);\n        border-radius: 20px;\n    `\n};\n\nexport default styled.div`${props => IngredientsStyles[props.type]}`;\n\n\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Ingredient from './IngredientStyling';\n\nconst BurgerContainer = styled.div`\n    width: 100%;\n    margin: auto;\n    margin-top: 50px;\n    height: 250px;\n    overflow: auto;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.2rem;\n\n@media (min-width: 500px) and (min-height: 400px) {\n    width: 350px;\n    height: 300px;\n}\n\n@media (min-width: 500px) and (min-height: 401px) {\n    width: 450px;\n    height: 400px;\n}\n\n@media (min-width: 1000px) and (min-height: 700px) {\n    width: 700px;\n    height: 450px;\n}\n`;\n\nconst burger = (props) => {\n\n    // map ingredients object to an array of ingredient components\n    const ingredientsComponents = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <Ingredient key={igKey + i} type={igKey} />\n            });\n        });\n\n    return(\n        <BurgerContainer>\n            <Ingredient type=\"breadTop\"/>\n            {ingredientsComponents}\n            <Ingredient type=\"breadBottom\"/>\n        </BurgerContainer>\n        \n        )\n    };\n    \n    export default burger;","import React from 'react';\nimport styled from 'styled-components';\n\nconst BuildControlDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 5px 0;\n`;\n\nconst Button = styled.button`\n    background-color: ${props => props.type === 'less' ? '#D39952' : '#8F5E1E'};\n    display: block;\n    font: inherit;\n    padding: 5px;\n    margin: 0 5px;\n    width: 80px;\n    border: 1px solid #AA6817;\n    cursor: pointer;\n    outline: none;\n    ${props => props.disabled ? 'background-color: #C7C6C6; cursor: not-allowed; border: 1px solid #ccc; color: #888888;' : ''}\n`;\n\nconst Label = styled.label`\n    padding: 10px;\n    font-weight: bold;\n    width: 80px;\n`;\n\nconst buildControl = (props) => {\n    return(\n        <BuildControlDiv>\n            <Label>{props.label}</Label>\n            <Button type='less' onClick={props.removeIngredient} disabled={props.disabled}>Less</Button>\n            <Button type='more' onClick={props.addIngredient}>More</Button>\n        </BuildControlDiv>\n        )\n    }\n    \nexport default buildControl;","import React from 'react';\nimport styled from 'styled-components';\nimport BuildControl from './BuildControl'\n\nconst BuildControlsDiv = styled.div`\nwidth: 100%;\nbackground-color: #CF8F2E;\ndisplay: flex;\nflex-flow: column;\nalign-items: center;\nbox-shadow: 0 2px 1px #ccc;\nmargin: auto;\npadding: 10px 0;\n`;\n\nconst OrderButton = styled.button`\n    background-color: #DAD735;\n    outline: none;\n    cursor: pointer;\n    border: 1px solid #966909;\n    color: #966909;\n    font-family: inherit;\n    font-size: 1.2em;\n    padding: 15px 30px;\n    margin: 40px;\n    box-shadow: 2px 2px 2px #966909;\n    :hover, :active {\n        background-color: #A0DB41;\n        border: 1px solid #966909;\n        color: #966909;\n    }\n`;\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\nconst buildControls = (props) => {\n    return(\n        <BuildControlsDiv>\n            <h2>Price {props.price.toFixed(2)}$</h2>\n            {/* Render Controls */}\n            {controls.map(ctrl => (\n                <BuildControl\n                key={ctrl.label}\n                label={ctrl.label} \n                type={ctrl.type}\n                addIngredient={() => props.addIngredient(ctrl.type)}\n                removeIngredient={() => props.removeIngredient(ctrl.type)} \n                disabled={props.disabledInfo[ctrl.type]}/>\n                ))}\n            <OrderButton onClick={props.orderButtonClick}>{props.isAuthenticated ? 'ORDER' : 'SIGN UP TO ORDER'}</OrderButton>\n        </BuildControlsDiv>\n    )\n}\n        \nexport default buildControls;","import React from 'react';\nimport styled from 'styled-components';\n\nconst BackdropDiv = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.5);  \n`;\n\nconst backdrop = (props) => (\n    props.show ? <BackdropDiv onClick={props.onClick}></BackdropDiv> : null\n)\n \nexport default backdrop;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Backdrop from './Backdrop'\n\nconst ModalDiv = styled.div`\n    position: fixed;\n    z-index: 500;\n    background-color: white;\n    width: 70%;\n    border: 1px solid #ccc;\n    box-shadow: 1px 1px 1px black;\n    padding: 16px;\n    left: 15%;\n    top: 30%;\n    box-sizing: border-box;\n    transition: all 0.3s ease-out;\n    transform: ${props => props.show ? 'translateY(0)' : 'translateY(-100vh)'};\n    opacity: ${props => props.show ? '1' : '0'};\n    @media (min-width: 600px) {\n        width: 500px;\n        left: calc(50% - 250px);\n    }\n`;\n\nclass Modal extends Component {\n    // Order Summary needs to be rerended only when modal is showing\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} onClick={this.props.hideModal}/>\n                <ModalDiv show={this.props.show}>\n                    {this.props.children}\n                </ModalDiv>\n            </React.Fragment>\n    \n         );\n    }\n}\n \nexport default Modal;","import React from 'react';\nimport styled from 'styled-components';\n\nconst themes = {\n    success: '#5C9210',\n    danger: '#800020'\n}\n\nconst StyledButton = styled.button`\n    background-color: transparent;\n    border: solid 2px ${props => props.disabled ? 'grey' : props.type};\n    outline: none;\n    cursor: pointer;\n    font: inherit;\n    padding: 10px;\n    margin: 10px;\n    font-weight: bold;\n    ${props => props.disabled ? 'cursor: not-allowed' : ''};\n    color: ${props => props.disabled ? 'grey' : props.type};\n\n    &:first-of-type {\n        margin-left: 0;\n    }\n`;\n\nconst Button = (props) => {\n    return (\n        <StyledButton type={themes[props.type]} onClick={props.onClick} disabled={props.disabled}>\n            {props.children}\n        </StyledButton>\n    );\n}\n \nexport default Button;","import React, { Fragment } from 'react';\nimport Button from '../UI/Button';\n\nconst OrderSummary = (props) => {\n        \n    // Get the ingredients list \n    const ingredientsList = [];\n    for(let key in props.ingredients){\n        if(props.ingredients[key] > 0){\n            ingredientsList.push(\n                <li key={key}>\n                    <span style={{textTransform: 'capitalize'}}>{key}</span>\n                    : {props.ingredients[key]}\n                </li>\n            )\n        }\n    }\n\n    let orderSummary = <h3>Do you really want to eat just a stale bread?</h3>;\n\n    // If there are ingredients added\n    if(ingredientsList.length > 0){\n        orderSummary = (\n            <Fragment>\n                <h2>Your Order:</h2>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientsList}\n                </ul>\n                <h3>Price: {props.price.toFixed(2)} $</h3>\n                <p>Continue to checkout?</p>\n                <Button type='danger' onClick={props.hideModal}>CANCEL</Button>\n                <Button type='success' onClick={props.continuePurchase}>CONTINUE</Button>\n            </Fragment>\n        )\n    }\n    return orderSummary;\n}\n    \n \nexport default OrderSummary;","import React, { Fragment, Component } from 'react';\nimport Modal from '../components/UI/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        constructor(props) {\n            super(props)\n            this.state = {error:null};\n        }\n\n        UNSAFE_componentWillMount() {\n\n            // TO DO : fix this, + eject interceptors in componentWillUnmount\n            // NEED TO SET THIS BEFORE componentDidMount() - WHERE SOULD I SET IT THEN?\n            // (I need them in the first rendering)\n            \n            // Clear state from error when sending a new request\n            axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            \n            // Check each response for error, set state if there is one\n            axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n        \n        errorDismissHandler = () => {\n            this.setState({error: null});\n        }\n        \n        \n        render() {\n            return (\n                <Fragment>\n                    <Modal show={this.state.error} hideModal={this.errorDismissHandler}>\n                    <h2 style={{color: '#800020'}}>Something went wrong...</h2>\n                    <p>{this.state.error ? this.state.error.message : null}</p>\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Fragment>\n                )\n            };\n        };\n    };\n    \n    export default withErrorHandler;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SpinnerDiv = styled.div`\n  background: #5C9210;\n  -webkit-animation: load1 1s infinite ease-in-out;\n  animation: load1 1s infinite ease-in-out;\n  width: 1em;\n  height: 4em;\n\n  color: #5C9210;\n  text-indent: -9999em;\n  margin: 88px auto;\n  position: relative;\n  font-size: 11px;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation-delay: -0.16s;\n  animation-delay: -0.16s;\n\n\n &:before, &:after {\n    background: #5C9210;\n    -webkit-animation: load1 1s infinite ease-in-out;\n    animation: load1 1s infinite ease-in-out;\n    width: 1em;\n    height: 4em;\n    position: absolute;\n    top: 0;\n    content: '';\n }\n\n &:before {\n    left: -1.5em;\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n}\n\n  &:after {\n    left: 1.5em;\n}\n\n@-webkit-keyframes load1 {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 0;\n    height: 4em;\n  }\n  40% {\n    box-shadow: 0 -2em;\n    height: 5em;\n  }\n}\n@keyframes load1 {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 0;\n    height: 4em;\n  }\n  40% {\n    box-shadow: 0 -2em;\n    height: 5em;\n  }\n}\n`;\n\nconst spinner = () => {\n    return ( <SpinnerDiv>Loading...</SpinnerDiv> );\n}\n \nexport default spinner;","import axios from '../../axios-orders';\nimport * as actionTypes from './actionTypes';\n\n// purchase\nexport const purchaseBurgerSuccess = (orderId, order) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        order: {\n            ...order,\n            id: orderId\n        }\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return{\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (order, push, token) => {\n    return dispatch => {\n        // set loading to true\n        dispatch(purchaseBurgerStart());\n        // post the order\n        axios.post('/orders.json?auth=' + token, order)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, order))\n                push('/');\n            })\n            .catch(error => purchaseBurgerFail(error));\n    }\n}\n\n// orders list\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&' + 'equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams) \n            .then(res => {\n                // transform data object into an array\n                const orders = [];\n                for(let key in res.data){\n                    orders.push({\n                        ...(res.data[key]),\n                        id: key\n                    })\n                };\n                dispatch(fetchOrdersSuccess(orders));\n            })\n            .catch(error => {dispatch(fetchOrdersFail(error))});\n    }\n}","// burger\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAIL = 'FETCH_INGREDIENTS_FAIL';\n// order: purchase\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\n// order: orders list\nexport const FETCH_ORDERS_INIT = 'FETCH_ORDERS_INIT';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\n// auth\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_URL = 'SET_AUTH_REDIRECT_URL';","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => ({\n    type: actionTypes.AUTH_START\n});\n\nexport const authSuccess = (token, userId) => ({\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n});\n\nexport const authFail = (error) => ({\n    type: actionTypes.AUTH_FAIL,\n    error: error\n});\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expirationDate');\n    return {\n    type: actionTypes.AUTH_LOGOUT\n}}\n\nexport const logoutWhenExpire = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000);\n    };\n};\n\nexport const setAuthRedirectUrl = (authRedirectUrl) => ({\n    type: actionTypes.SET_AUTH_REDIRECT_URL,\n    authRedirectUrl: authRedirectUrl\n})\n\nexport const auth = (email, password, isSignup, push, authRedirectUrl) => {\n    return dispatch => {\n        dispatch(authStart())\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        // default url for signup (honestly expect more signups then logins :D)\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCc2OZLI_YCHcLR1hW5vPGCj8lD6rkrKfs'\n        // if not signup mode\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCc2OZLI_YCHcLR1hW5vPGCj8lD6rkrKfs'\n        }\n        axios.post(url, authData)\n            .then(response => {\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                // get the expiration dat\n                const expirationDate = new Date(new Date().getTime() +  response.data.expiresIn * 1000);\n                // store token, userId and expiaration date in the local storage\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('userId', response.data.localId);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(logoutWhenExpire(response.data.expiresIn));\n                push(authRedirectUrl);\n            })\n            .catch(error => {\n                if (error.response){\n                    dispatch(authFail(error.response.data.error));\n                } else {\n                    console.log(error);\n                }\n            })\n    }\n}\n\nexport const tryAutoLogin = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');    \n        if (token){\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            const currentDate = new Date();\n            if (expirationDate < currentDate){\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(logoutWhenExpire((expirationDate - currentDate) / 1000));\n            };\n        };\n    };\n};","// packages\nimport React, { Component, Fragment } from 'react';\nimport axios from '../axios-orders';\nimport { connect } from 'react-redux';\n// components\nimport Burger from '../components/Burger/Burger';\nimport BuildControlsPanel from '../components/BuildControls/BuildControlsPanel';\nimport Modal from '../components/UI/Modal';\nimport OrderSummary from '../components/Order/OrderSummary';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport Spinner from '../components/UI/Spinner';\n// actions\nimport * as actions from '../store/actions/index';\n\nexport class BurgerBuilder extends Component{\n    // local state for UI\n    state = {\n        purchasing: false,\n        loading: false\n    }\n\n    orderButtonHandler = () => {\n        if(this.props.isAuthenticated){\n            this.setState({purchasing: true})\n        }else {\n            this.props.setAuthRedirectUrl('/checkout')\n            this.props.history.push('/auth');\n        }\n    }\n\n    hidePurchaseModalHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    continuePurchaseHandler = () => {\n        this.props.history.replace('/checkout');\n\n    }\n\n    componentDidMount = () => {\n        this.props.initIngredients();\n    }    \n\n    render () {\n        // get disabledInfo for buttons\n        const disabledInfo = {...this.props.ingredients};\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // let burger be an error message if there is one, otherwise assign burger a component\n        let burger = this.props.error ? <p>Sorry, can't load the ingredients</p> : <Spinner />;\n        if(this.props.ingredients){\n            burger = (\n            <Fragment>\n                <Burger ingredients={this.props.ingredients}/>\n                <BuildControlsPanel\n                    addIngredient={this.props.addIngredientHandler}\n                    removeIngredient={this.props.removeIngredientHandler}\n                    price={this.props.totalPrice}\n                    disabledInfo={disabledInfo}\n                    orderButtonClick={this.orderButtonHandler}\n                    isAuthenticated={this.props.isAuthenticated}/>\n            </Fragment>\n            );\n        };\n        return (\n            <Fragment>\n                <Modal show={this.state.purchasing} hideModal={this.hidePurchaseModalHandler}>\n                    <OrderSummary \n                        ingredients={this.props.ingredients} \n                        hideModal={this.hidePurchaseModalHandler}\n                        continuePurchase={this.continuePurchaseHandler}\n                        price={this.props.totalPrice}\n                        loading={this.state.loading}/>\n                </Modal>\n                {burger}\n            </Fragment>\n            )\n        }\n}\n\nconst mapStateToProps = state => ({\n        ingredients: state.burger.ingredients,\n        totalPrice: state.burger.totalPrice,\n        error: state.burger.error,\n        isAuthenticated: state.auth.token !== null\n })\n\nconst mapDispatchToProps = dispatch => ({\n        addIngredientHandler: (ingType) => dispatch(actions.addIngredient(ingType)),\n        removeIngredientHandler: (ingType) => dispatch(actions.removeIngredient(ingType)),\n        initIngredients: () => dispatch(actions.initIngredients()),\n        setAuthRedirectUrl: (authRedirectUrl) => dispatch(actions.setAuthRedirectUrl(authRedirectUrl))\n})\n\nexport default withErrorHandler(connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder), axios);","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const addIngredient = (ingType) => {\n    return{\n        type: actionTypes.ADD_INGREDIENT,\n        ingType: ingType}\n}\n\nexport const removeIngredient = (ingType) => {\n    return{\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingType: ingType}\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return{\n        type: actionTypes.FETCH_INGREDIENTS_FAIL\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://burgerpub-b74df.firebaseio.com/ingredients.json')\n            .then(response => {dispatch(setIngredients(response.data))})\n            .catch(error => {dispatch(fetchIngredientsFailed())})\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport BurgerLogoImg from '../../assets/images/burger-logo.png'\n\nconst LogoDiv = styled.div`\n  background-color: white;\n  padding: 6px;\n  height: ${props=> props.height};\n  border-radius: 7px;\n`;\n\nconst LogoImg = styled.img`\n  height: 100%;\n`;\n\nconst logo = (props) => {\n    return (\n        <LogoDiv height={props.height}>\n            <LogoImg \n              src={BurgerLogoImg} \n              alt=\"BurgerBuilder\"/>\n        </LogoDiv>\n    );\n}\n \nexport default logo;","import React from 'react';\nimport styled from 'styled-components';\nimport {NavLink} from 'react-router-dom';\n\nconst Li = styled.li`\n    /* Mobile styles */\n    margin: 10px 0;\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    /* Desktop styles */\n    @media (min-width: 500px) {\n        margin: 0;\n        display: flex;\n        height: 100%;\n        width: auto;\n        align-items: center;\n    }\n`;\n\nconst LinkDiv = styled.div`\n    /* Mobile styles */\n    text-decoration: none;\n    width: 100%;\n    box-sizing: border-box;\n    display: block;\n    color: ${props => props.active ? '#40A4C8' : '#8F5C2C'};\n    &:hover, &:active{\n        color: '#40A4C8';\n    }\n\n    /* Desktop styles */\n    @media (min-width: 500px) {\n        color: white;\n        height: 100%;\n        padding: 16px 10px;\n        border-bottom: 4px solid transparent;    \n        &:hover, &:active{\n        background-color: #8F5C2C;\n        border-bottom: 4px solid #40A4C8;\n        }\n    }\n`;\n\n\nconst navigationItem = (props) => {\n    // define inline style (on order to override NavLink anchor style)\n    // TO DO: FIX THIS, FIX ACTIVE LINK STYLE\n    const style = {\n        textDecoration: 'none',\n        backgroundColor: props.active ? '#8F5C2C' : 'none',\n        // borderBottom: props.active ? '4px solid #40A4C8' : 'none'\n    }\n    return (\n        <Li>\n            <NavLink to={props.href} style={style}>\n                <LinkDiv>\n                        {props.children}\n                </LinkDiv>\n            </NavLink>\n        </Li>\n    );\n}\n \nexport default navigationItem;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport NavigationItem from './NavigationItem'\n\nconst NavigationItemsUl = styled.ul`\n    margin: 35px 0 0 8px;\n    padding: 0;\n    list-style: none;\n    align-items: center;\n    height: 100%;\n    @media (min-width: 500px){\n        display: flex;\n        margin: 0;\n    }\n`;\n\n\nconst navigationItems = (props) => {\n    return (\n        <NavigationItemsUl>\n            <NavigationItem href='/builder'>Builder</NavigationItem>\n            {props.isAuthenticated\n             ? <Fragment>\n                    <NavigationItem href='/orders'>Orders</NavigationItem>\n                    <NavigationItem href='/logout'>Log out</NavigationItem>\n               </Fragment>\n             : <NavigationItem href='/auth'>Sign up</NavigationItem>}\n            {/* <NavigationItem href='/about'>About</NavigationItem> */}\n        </NavigationItemsUl>\n    );\n}\n\n\nexport default navigationItems;","import React from 'react';\nimport styled from 'styled-components';\n\nconst HamburgerBarDiv = styled.div`\n    width: 30px;\n    height: 4px;\n    background-color: white;\n    margin: 5px 0;\n    border-radius: 5px;\n`;\n\nconst hamburgerButton = (props) => {\n    return (\n        <div onClick={props.onClick}>\n            <HamburgerBarDiv />\n            <HamburgerBarDiv />\n            <HamburgerBarDiv />\n        </div>\n    );\n};\n \nexport default hamburgerButton;","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../Logo/Logo';\nimport NavigationItems from './NavigationItems';\nimport HamburgerButton from '../UI/HamburgerButton';\n\nconst ToolbarHeader = styled.header`\n    height: 56px;\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #703B09;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 20px;\n    box-sizing: border-box;\n    z-index: 90;\n`;\n\nconst DesktopOnlyDiv = styled.div`\n    @media (max-width: 499px){\n        display: none;\n    }\n`;\n\nconst MobileOnlyDiv = styled.div`\n    @media (min-width: 500px){\n        display: none;\n    }\n`;\n\nconst toolbar = (props) => {\n    return (\n        <ToolbarHeader>\n            <Logo height=\"50%\"></Logo>\n            <DesktopOnlyDiv>\n                <NavigationItems isAuthenticated={props.isAuthenticated}/>\n            </DesktopOnlyDiv>\n            <MobileOnlyDiv>\n                <HamburgerButton onClick={props.showSideDrawer}/>\n            </MobileOnlyDiv>\n        </ToolbarHeader>\n    );\n}\n \nexport default toolbar;","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport Logo from '../Logo/Logo';\nimport NavigationItems from './NavigationItems';\nimport Backdrop from '../UI/Backdrop'\n\nconst SideDrawerDiv = styled.div`\n    position: fixed;\n    width: 280px;\n    max-width: 70%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 200;\n    background-color: white;\n    padding: 32px 16px;\n    box-sizing: border-box;\n    transition: transform 0.3s ease-out;\n    /* Show/hide sideDrawer with animation*/\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(-100%)'};\n    @media (min-width: 500px) {\n        display: none;\n    }\n`;\n\nconst sideDrawer = (props) => {\n    return (\n        <Fragment>\n            <Backdrop show={props.show} onClick={props.hideSideDrawer}/>\n            <SideDrawerDiv show={props.show}>\n                <Logo height=\"6%\"/>\n                <div onClick={props.hideSideDrawer}> \n                    <NavigationItems isAuthenticated={props.isAuthenticated}/>\n                </div>\n            </SideDrawerDiv>\n        </Fragment>\n\n    );\n}\n \nexport default sideDrawer;","import React from 'react'\nimport styled from 'styled-components';\nimport Burger from '../Burger/Burger';\nimport Button from '../UI/Button';\n\nconst CheckoutSummaryDiv = styled.div`\n  text-align: center;\n  margin: 40px;\n  padding: 10px;\n  border: 2px solid grey;\n`;\n\nconst CheckoutSummary = (props) => {\n    return ( \n        <CheckoutSummaryDiv>\n            <h1>So that's your Burger, is it all right?</h1>\n            <div>\n                <Burger ingredients={props.ingredients}/>           \n            </div>\n            <div>\n                <Button type=\"danger\" onClick={props.checkoutCancelHandler}>NOT SURE</Button>\n                <Button type=\"success\" onClick={props.checkoutContinueHandler}>LOOKS GOOD, GO ON!</Button>\n            </div>\n        </CheckoutSummaryDiv>\n     );\n}\n \nexport default CheckoutSummary;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../components/Checkout/CheckoutSummary';\n\n\nclass Checkout extends Component {\n     checkoutCancelHandler = () => {\n         this.props.history.replace('/');\n    }\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/contact-details');\n    }\n\n    render() { \n        // avoid loading the checkout page on startup, when there are no ingredients (no burgerer)\n        // which would lead to error (looping through null)\n        // doesn't make sense to be on checkout without burger, therefore redirect\n        let summary = <Redirect to='/'/>\n        if (this.props.ingredients){\n            summary = (\n                <div>\n                    {/* outsourcing checkout summary dodesn't make much sense just now */}\n                    <CheckoutSummary ingredients={this.props.ingredients}\n                        checkoutCancelHandler={this.checkoutCancelHandler}\n                        checkoutContinueHandler={this.checkoutContinueHandler}/>\n                </div>\n            )\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => ({\n    ingredients: state.burger.ingredients\n})\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport styled from 'styled-components';\n\nconst OrderDiv = styled.div`\n    width: 80%;\n    border: 1px solid #eee;\n    box-shadow: 0 2px 3px #ccc;\n    padding: 10px;\n    margin: 10px auto;\n    box-sizing: border-box;\n`;\n\nconst order = (props) => {\n    // Get the ingredients list \n    const ingredientsList = [];\n    for(let key in props.ingredients){\n        if(props.ingredients[key] > 0){\n            ingredientsList.push(\n                <li key={key}>\n                    <span style={{textTransform: 'capitalize'}}>{key}</span>\n                    : {props.ingredients[key]}\n                </li>\n            )\n        }\n    }\n\n\n    return ( \n        <OrderDiv>\n            <h3>Ingredients:</h3>\n             {ingredientsList}\n            <p>Price <strong>USD {props.price.toFixed(2)}</strong></p>\n        </OrderDiv>\n     );\n}\n \nexport default order;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport axios from '../axios-orders';\nimport Order from '../components/Order/Order';\nimport Spinner from '../components/UI/Spinner';\nimport * as actions from '../store/actions/index';\n\n\nclass Orders extends Component {\n    // orders are stored in the redux store\n    // althought it doesn't really matter as they are fetched every time anyways\n    // but it's a good practice\n\n    componentDidMount() {\n        this.props.fetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading){\n            orders = ( \n                <div>\n                    {this.props.orders.map(order => (\n                            <Order \n                                key={order.id}\n                                ingredients={order.ingredients}\n                                price={order.price}/>\n                    ))}\n                </div>\n             );\n        }\n        return orders\n    }\n}\n\nconst mapStateToProps = state => ({\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n});\n \nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React from 'react';\nimport styled from 'styled-components';\n\nconst InputDiv = styled.div`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nconst GeneralInputElementStyle = `\n    outline: none;\n    border: 1px solid #ccc;\n    background-color: white;\n    font: inherit;\n    padding: 6px 10px;\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n    &:focus {\n        outline: none;\n        background-color: #ccc;\n    }\n`;\n\nconst Input = styled.input`\n    ${GeneralInputElementStyle}\n    background-color: ${props => props.invalid ? '#FFCCCB' : 'white'};\n`;\n\nconst Textarea = styled.textarea`\n    ${GeneralInputElementStyle}\n    background-color: ${props => props.invalid ? '#FFCCCB' : 'white'};\n`;\n\nconst Select = styled.select`\n    ${GeneralInputElementStyle}\n`;\n\n// TO DO: pass some validation message\n\nconst input = (props) => {\n    let inputElement;\n    switch (props.elementType) {\n        case ('textarea'):\n            inputElement = <Textarea \n                {...props.elementConfig} \n                value={props.value} \n                onChange={(event) => props.changed(event, props.id)}\n                invalid={props.invalid}/>;\n            break;\n        case ('select'):\n            inputElement = (\n                <Select \n                value={props.elementConfig.value} \n                onChange={(event) => props.changed(event, props.id)}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </Select>\n            )\n            break;\n        default:\n            inputElement = <Input \n                {...props.elementConfig} \n                value={props.value} \n                onChange={(event) => props.changed(event, props.id)}\n                invalid={props.invalid}/>\n    }\n\n    return ( \n        <InputDiv>\n            <Label>{props.label}</Label>\n            {inputElement}\n        </InputDiv>\n     );\n}\n \nexport default input;","export const updateObject = (object, newProps) => ({\n    ...object,\n    ...newProps\n})\n\nexport const countObjectValues = object => {\n    let sum = 0;\n    for (let key in object){\n        sum += object[key];\n    }\n    return sum;\n}\n\nexport const checkInputValidity = (value, rules) => {\n    const clearedValue = value.replace(/ /g,'');;\n    if (rules.required && clearedValue === '') {\n        return false\n    }\n    if (rules.maxLength && clearedValue.length > rules.maxLength) {\n        return false\n    }\n    if (rules.minLength && clearedValue.length < rules.minLength) {\n        return false\n    }\n    return true;\n }\n\n export const checkFormValidity = (form) => {\n    for(let key in form){\n        if(!form[key].valid){\n            return false;\n        };\n    }\n    return true;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport axios from '../axios-orders';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport Button from '../components/UI/Button';\nimport Spinner from '../components/UI/Spinner';\nimport Input from '../components/UI/Input';\nimport * as actions from '../store/actions/index';\nimport { updateObject, checkInputValidity, checkFormValidity } from '../shared/utilities';\n\n\nconst Form = styled.form`\n  margin: 40px auto;\n  text-align: center;\n  border: 2px solid grey;\n  padding: 10px;\n  width: 90%;\n  max-width: 700px;\n`;\n\nclass ContactDetails extends Component {\n    state = {\n        // form data handling in a very dynamic and neat way:\n        // only edit this Form config\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 6,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'cheapest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n\n    inputChangedHandler = (event, id) => {\n        const form = this.state.orderForm;\n        const updatedOrderForm = updateObject(form, {\n            [id]: updateObject(form[id], {\n                value: event.target.value,\n                valid: checkInputValidity(event.target.value, form[id].validation),\n                touched: true \n            })\n        });\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: checkFormValidity(updatedOrderForm)\n        });\n     }\n\n    postOrderHandler = (event) => {\n        event.preventDefault();\n        // get the form data\n        let formData = {};\n        for(let key in this.state.orderForm){\n            formData[key] = this.state.orderForm[key].value;\n        }\n        const order = {\n            userId: this.props.userId,\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            formData: formData\n        }\n        this.props.purchaseBurger(order, this.props.history.push, this.props.token);\n    }\n\n    cancelOrderHandler = () => {\n        this.props.history.replace('/');\n    }\n\n    render() { \n        // transform the orderForm config onject into array\n        let formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        \n        let form = (\n            <Form onSubmit={this.postOrderHandler}>\n                <h4>Enter your contact details please:</h4>\n                {formElementsArray.map(El => (\n                    <Input\n                        key={El.id}\n                        id={El.id}\n                        {...El.config}\n                        changed={this.inputChangedHandler}\n                        invalid={!El.config.valid && El.config.touched}\n                    />))\n                }\n                <Button type=\"danger\" onClick={this.cancelOrderHandler}>CANCEL</Button>\n                <Button type='success' disabled={!this.state.formIsValid}>ORDER</Button>\n            </Form>\n        )\n        \n        if(this.props.loading){\n            form = <Spinner />\n        }\n        return (form);\n    }\n}\n\nconst mapStateToProps = state => ({\n    ingredients: state.burger.ingredients,\n    totalPrice: state.burger.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n})\n\nconst mapDispatchToProps = dispatch => ({\n    purchaseBurger: (order, push, token) => dispatch(actions.purchaseBurger(order, push, token)),\n})\n \nexport default withErrorHandler(connect(mapStateToProps, mapDispatchToProps)(ContactDetails), axios);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from '../components/UI/Button';\nimport Input from '../components/UI/Input';\nimport Spinner from '../components/UI/Spinner';\nimport * as actions from '../store/actions';\nimport { checkInputValidity, checkFormValidity, updateObject } from '../shared/utilities';\n\nconst FormDiv = styled.div`\n  margin: 40px auto;\n  text-align: center;\n  border: 2px solid grey;\n  padding: 10px;\n  width: 90%;\n  max-width: 450px;\n`;\n\nclass Auth extends Component {\n    state = { \n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail adress'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },            \n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        isSignup: true\n     }\n\n     inputChangedHandler = (event, id) => {\n        const form = this.state.controls;\n        const updatedAuthForm = updateObject(form, {\n            [id]: updateObject(form[id], {\n                value: event.target.value,\n                valid: checkInputValidity(event.target.value, form[id].validation),\n                touched: true \n            })\n        });\n        this.setState({\n            controls: updatedAuthForm,\n            formIsValid: checkFormValidity(updatedAuthForm)\n        });\n     }\n\n\n    loginSubmitHandler = (event) => {\n        event.preventDefault();\n        this.props.auth(\n            this.state.controls.email.value, \n            this.state.controls.password.value, \n            this.state.isSignup,\n            this.props.history.push,\n            this.props.authRedirectUrl);    \n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => ({\n            isSignup: !prevState.isSignup\n        }))\n    }\n\n    render() { \n        // transform the form controls object into array\n        let formElementsArray = [];\n        for(let key in this.state.controls){\n            formElementsArray.push({\n                inputName: key,\n                config: this.state.controls[key]\n            })\n        }\n\n        const form = formElementsArray.map(formEl => (\n            <Input\n                key={formEl.inputName}\n                id={formEl.inputName}\n                {...formEl.config}\n                changed={this.inputChangedHandler}\n                invalid={!formEl.config.valid && formEl.config.touched}>\n            </Input>\n        ))\n        \n        let errorMessage = null;\n        if(this.props.error){\n            errorMessage = <p style={{color: '#800020'}}>{this.props.error.message}</p>\n        }\n\n        let formPanel = <Spinner />;\n        if (!this.props.loading){\n            formPanel = (\n                <div>\n                    <FormDiv>\n                        <h3>{this.state.isSignup ? 'Sign Up' : 'Log In'}</h3>\n                        <form>\n                            {form}\n                        </form>\n                        <Button type='success' onClick={this.loginSubmitHandler}>{this.state.isSignup ? 'SIGN UP' : 'LOGIN'}</Button>\n                        <hr style={{marginTop: '40px'}} />\n                        <p>{this.state.isSignup ? 'Already have any account?' : 'Don\\'t have an account yet?'}</p>\n                        <Button type='danger' onClick={this.switchAuthModeHandler}>GO TO {this.state.isSignup ? 'LOGIN' : 'SIGN UP'}</Button>\n                        {errorMessage}\n                    </FormDiv>\n                </div>\n            );\n        };\n\n        return formPanel;\n    }\n}\n\nconst mapStateToProps = state => ({\n    loading: state.auth.loading,\n    error: state.auth.error,\n    authRedirectUrl: state.auth.authRedirectUrl\n})\n \nconst mapDispatchToProps = dispatch => ({\n    auth: (email, password, isSignup, push, authRedirectUrl) => dispatch(actions.auth(email, password, isSignup, push, authRedirectUrl))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index'\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.logout();\n    }\n    render() { \n        return ( <Redirect to='/auth'/> );\n    }\n}\n \nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(actions.logout())\n})\n\nexport default connect(null, mapDispatchToProps)(Logout);","// packages\nimport React, { Component, Fragment } from 'react';\nimport { Route, Redirect, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n// components\nimport BurgerBuilder from './containers/BurgerBuilder';\nimport Toolbar from './components/Navigation/Toolbar';\nimport SideDrawer from './components/Navigation/SideDrawer';\nimport Checkout from './containers/Checkout';\nimport Orders from './containers/Orders';\nimport ContactDetails from './containers/ContactDetails';\nimport Auth from './Auth/Auth';\nimport Logout from './Auth/Logout';\nimport * as actions from './store/actions/index';\n\n\nconst StyledMain = styled.main`\n  margin-top: 100px;\n`;\n\nclass App extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  componentDidMount() {\n    this.props.tryAutoLogin();\n  }\n\n  showSideDrawerHandler = () => {\n    this.setState({\n      showSideDrawer: true\n    });\n  };\n\n  hideSideDrawerHandler = () => {\n    this.setState({\n      showSideDrawer: false\n    });\n  };\n\n  render () {\n    // Guarding routes\n    let routes = (\n      <Switch>\n        <Route path='/builder' component={BurgerBuilder}/>\n        <Route path='/auth' component={Auth}/> \n        <Redirect from='/' to='/builder' />   \n      </Switch>\n\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/builder' component={BurgerBuilder}/>\n          <Route path='/checkout' exact component={Checkout}/> \n          <Route path='/contact-details' component={ContactDetails}/>\n          <Route path='/orders' component={Orders}/> \n          <Route path='/logout' component={Logout}/> \n          <Redirect from='/' to='/builder' />   \n      </Switch>\n      )\n    }\n\n    return(\n      <Fragment>\n        {/* Navigation */}\n        <Toolbar showSideDrawer={this.showSideDrawerHandler} isAuthenticated={this.props.isAuthenticated}/>\n        <SideDrawer \n          show={this.state.showSideDrawer} \n          hideSideDrawer={this.hideSideDrawerHandler}\n          isAuthenticated={this.props.isAuthenticated}/>\n        {/* Content */}\n        <StyledMain>\n          {routes}\n        </StyledMain>\n    </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.token !== null\n})\n\nconst mapDispatchToProps = dispatch => ({\n  tryAutoLogin: () => dispatch(actions.tryAutoLogin())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject, countObjectValues } from '../../shared/utilities';\n\n// outsource maybe? \nconst INGREDIENT_PRICES = {\n    bread: 3,\n    meat: 1.3,\n    bacon: 0.8,\n    salad: 0.5,\n    cheese: 0.4\n};\n\nconst initialPrice = countObjectValues(INGREDIENT_PRICES);\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: initialPrice,\n    error: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {         \n        case actionTypes.ADD_INGREDIENT: \n            return updateObject(state, \n                {ingredients: updateObject(state.ingredients, \n                    {[action.ingType]: state.ingredients[action.ingType] + 1}),\n                totalPrice: (state.totalPrice += INGREDIENT_PRICES[action.ingType])})\n        case actionTypes.REMOVE_INGREDIENT:\n            return updateObject(state, \n                {ingredients: updateObject(state.ingredients, \n                    {[action.ingType]: state.ingredients[action.ingType] - 1}),\n                totalPrice: (state.totalPrice -= INGREDIENT_PRICES[action.ingType])});\n        case actionTypes.SET_INGREDIENTS:\n            return updateObject(state, {\n                ingredients: action.ingredients,\n                totalPrice: initialPrice,\n                error: false});\n        case actionTypes.FETCH_INGREDIENTS_FAIL:\n            return updateObject(state, {error: true});\n        default:\n            return state;\n    }\n}\n \nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utilities';\n\n// saving also error, although not using it (can be useful in the future)\nconst initialState = { \n    orders: [],\n    loading: false,\n    error: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // purchase\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, {loading: true});\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            return updateObject(state, {loading: false, orders: state.orders.concat(action.order)})\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, {loading: false, error: action.error});\n        // orders list\n        case actionTypes.FETCH_ORDERS_START:\n            return updateObject(state, {loading: true})\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, {loading: false, orders: action.orders})\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, {loading: false, error: action.error})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utilities';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectUrl: '/'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return updateObject(state, {error: null, loading: true});\n        case actionTypes.AUTH_SUCCESS:\n            return updateObject(state, {\n                token: action.token,\n                userId: action.userId,\n                error: null,\n                loading: false\n            });\n        case actionTypes.AUTH_FAIL:\n            return updateObject(state, {loading: false, error: action.error});\n        case actionTypes.AUTH_LOGOUT:\n            return updateObject(state, {token: null, userId: null});\n        case actionTypes.SET_AUTH_REDIRECT_URL:\n            return updateObject(state, {authRedirectUrl: action.authRedirectUrl})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","// packages\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// app imports\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// reducers\nimport burger from './store/reducers/burger';\nimport order from './store/reducers/order';\nimport auth from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n  burger: burger,\n  order: order,\n  auth: auth\n})\n\n// redux DevTools setup\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst centralStore = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n\nconst app = (\n  <Provider store={centralStore}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}